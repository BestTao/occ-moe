# python train.py --config_file configs/OCC_Duke/vit_transreid_z.yml
# CUDA_VISIBLE_DEVICES=0,1 python train.py --config_file configs/OCC_Duke/vit_transreid_z.yml MODEL.DIST_TRAIN True
# CUDA_VISIBLE_DEVICES=0,1 python -m torch.distributed.launch --nproc_per_node=2 --master_port 7777 train.py --config_file configs/OCC_Duke/vit_transreid_z.yml
# CUDA_VISIBLE_DEVICES=2,3 python -m torch.distributed.launch --nproc_per_node=2 --master_port 8888 train.py --config_file configs/OCC_Duke/vit_transreid_z.yml
# CUDA_VISIBLE_DEVICES=0,1,2,3 python -m torch.distributed.launch --nproc_per_node=4 --master_port 8888 train.py --config_file configs/OCC_Duke/vit_transreid_z.yml
# /data/zht/learn_pytorch/megaz-reid-master/megaz-reid-master/output/moe/327/transformer_130.pth
# /data1/zht/Models/TransReid/jx_vit_base_p16_224-80ecf9dd.pth
MODEL:
  PRETRAIN_CHOICE: 'imagenet'
  PRETRAIN_PATH: '/data1/zht/Models/TransReid/jx_vit_base_p16_224-80ecf9dd.pth'
  METRIC_LOSS_TYPE: 'triplet'
  IF_LABELSMOOTH: 'off'
  IF_WITH_CENTER: 'no'
  NAME: 'transformer'
  NO_MARGIN: True
  DEVICE_ID: ('2')
  TRANSFORMER_TYPE: 'vit_base_patch16_224_TransReID'
  STRIDE_SIZE: [16, 16]
  SIE_CAMERA: True
  SIE_COE: 3.0                                                                           
  ZZWEXP: True
  TRIPLET_LOSS_WEIGHT: 1.0
  OCC_LOSS_WEIGHT: 1.0
  IFRC_LOSS_TYPE: 'l2dist'
  IFRC_LOSS_WEIGHT: 0.01
  JPM: True
  RE_ARRANGE: True  # 之前是False
  OCC_TYPE: 'instance_mask'
  OCC_TYPES: ['instance_mask', 'img_block']
  OCC_TYPES_RATIO: [0.7, 0.1]
  PATCH_ALIGN_OCC: True
  OCC_RATIO: [0.3, 0.5]
  OCC_MARGIN: 0.3
  OCC_ULRD: [0.2, 0.2, 0.2, 0.4]
  OCC_ALIGN_BOUND: False
  PRETEXT: 'feat'
  BRANCH_BLOCKS: 0
  USE_DECODER_FEAT: 'glb_n_loc'
  DIST_TRAIN: False
  OCC_AWARE: True
  FIX_ALPHA: 0.01
  OCC_AUG: False
  IFRC: True
  EXTRA_OCC_BLOCKS: 3
  qkv_bias: True
  mlp_ratio: 4
  depth: 12
  embed_dim: 768
  TWO_BRANCHED: True
  SAMPLE_HEAD_SUP: False
  HEAD_DIV_LOSS_WEIGHT: 0.1


ENCODER:
  num_layers: 12
  mlp_dim: 768
  num_heads: 12
  attention_dropout_rate: 0.1

MOE:
  layers: [5,7,9]   # 需要替换为Moe的层（范围0到11，即0到depth-1）
  num_experts: 8
  group_size: 4
  capacity_factor: 1.4
  router:
    num_selected_experts: 2
    noise_std: 1e-3
    importance_loss_weight: 0.02
    load_loss_weight: 0.02
    # capacity_factor: 1.5
    # capacity: 2
    dispatcher:
      name: einsum
      capacity: 2
      batch_priority: false
      bfloat16: false


INPUT:
  SIZE_TRAIN: [256, 128]
  SIZE_TEST: [256, 128]
  PROB: 0.5 # random horizontal flip
  RE_PROB: 0.5 # random erasing
  PADDING: 10
  PIXEL_MEAN: [0.5, 0.5, 0.5]
  PIXEL_STD: [0.5, 0.5, 0.5]
  OCC_TYPE: 'instance_mask'
  OCC_TYPES: ['instance_mask', 'img_block']
  OCC_TYPES_RATIO: [0.7, 0.1]
   # zzw
  AUG_TYPES: ['occlusion']

DATASETS:
  NAMES: ('occ_reid')
  ROOT_DIR: ('/data/zht/learn_pytorch/megaz-reid-master/megaz-reid-master/data')

DATALOADER:
  SAMPLER: 'softmax_triplet'
  NUM_INSTANCE: 4   # 默认设置4
  NUM_WORKERS: 8 # 默认设置8

SOLVER:
  OPTIMIZER_NAME: 'SGD'
  MAX_EPOCHS: 500
  BASE_LR: 0.01
  IMS_PER_BATCH: 64
  WARMUP_METHOD: 'linear'
  LARGE_FC_LR: False
  CHECKPOINT_PERIOD: 10
  LOG_PERIOD: 50
  EVAL_PERIOD: 5
  WEIGHT_DECAY:  1e-4
  WEIGHT_DECAY_BIAS: 1e-4
  BIAS_LR_FACTOR: 2
  OCC_PRED_FROZEN: 60

TEST:
  EVAL: True
  IMS_PER_BATCH: 256
  RE_RANKING: False
  WEIGHT: './weights/occduke_4-11_729.pth'
  NECK_FEAT: 'before'
  FEAT_NORM: 'yes'
  USE_FEAT: 'dec'

OUTPUT_DIR: '/data/zht/learn_pytorch/megaz-reid-master/megaz-reid-master/output/occ_reid/510_1'


